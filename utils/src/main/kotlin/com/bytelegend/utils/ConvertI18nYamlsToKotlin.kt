package com.bytelegend.utils

//import com.bytelegend.app.shared.Locale
//import com.bytelegend.app.shared.LocalizedText
//import com.bytelegend.app.shared.codegen.toKotlinCode
//import com.fasterxml.jackson.core.type.TypeReference
//import com.fasterxml.jackson.databind.ObjectMapper
//import com.fasterxml.jackson.dataformat.yaml.YAMLFactory
//import java.io.File
//
//fun main(args: Array<String>) {
//    convertI18nYamlsToKotlinCode(File(args[0]), File(args[1]))
//}
//
//val YAML_PARSER = ObjectMapper(YAMLFactory())
//
//fun convertI18nYamlsToKotlinCode(inputDir: File, outputKotlinFile: File) {
//    val texts = mutableListOf<LocalizedText>()
//    inputDir.walkTopDown().forEach {
//        if (it.name.endsWith(".yml")) {
//            val map = YAML_PARSER.readValue(it, object : TypeReference<Map<String, Map<String, String>>>() {})
//            map.forEach { (key, localeToText) ->
//                texts.addAll(localeToText.entries.map { LocalizedText(key, Locale.of(it.key), it.value) })
//            }
//        }
//    }
//
//    outputKotlinFile.writeText("""
//package com.bytelegend.app.shared.generated
//
//import com.bytelegend.app.shared.Locale
//import com.bytelegend.app.shared.LocalizedText
///*** WARNING: DO NOT EDIT THIS FILE MANUALLY AS IT IS AUTO GENERATED ***/
//
//val i18nTexts: Map<String, Map<Locale, LocalizedText>> = listOf<LocalizedText>(
//     ${texts.toKotlinCode()}
//).groupBy { it.key }
// .mapValues { entry -> entry.value.map { it.locale to it }.toMap() }
//""")
//}