name: check

on:
  push:
    branches-ignore:
      - release
    paths-ignore:
      - '**/*.md'
      - versions.json
  pull_request:
    branches-ignore:
      - release
    paths-ignore:
      - '**/*.md'
      - versions.json
jobs:
  member-check:
    runs-on: 'ubuntu-latest'
    if: ${{ github.event.pull_request.author_association != 'CONTRIBUTOR' }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.BYTELEGENDBOT_TOKEN }}
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle chaches
        uses: actions/cache@v2
        env:
          cache-name: cache-gradle-user-home
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('**/*.gradle.kts') }}
            ${{ runner.os }}-
      - name: Make project tmp dir
        # Avoid /tmp/junit7926058776963978936/zoo.cfg (Permission denied)
        run: |
          mkdir -p "${{ env.GITHUB_WORKSPACE }}/build/tmp"
          sudo chmod 777 "${{ env.GITHUB_WORKSPACE }}/build/tmp"
      - name: Build with Gradle
        run: ./gradlew check --scan
        env:
          TMPDIR: ${{ env.GITHUB_WORKSPACE }}/build/tmp
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: screen-recordings
          path: |
            server/app/build/tmp/test/**/*.flv
            server/app/build/reports/tests
  contributor-check:
    runs-on: 'ubuntu-latest'
    if: ${{ github.event.pull_request.author_association == 'CONTRIBUTOR' }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: false
      - name: Checkout server-opensource
        run: git submodule update --init -- game-data
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-gradle-user-home
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: Show Gradle version
        run: ./gradlew --version
      - name: Build with Gradle
        run: ./gradlew ktlint server-opensource:check --scan
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: screen-recordings
          path: |
            server/app/build/tmp/test/**/*.flv
            server/app/build/reports/tests
